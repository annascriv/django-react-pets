--How many orders were made? 

SELECT COUNT(*) FROM Orders;

--Customer name, number of items in each order, item name from each order

SELECT CONCAT(Customers.first_name, ' ', Customers.last_name) as full_name, Orders.order_date, SUM(Menu_Item_Orders.quantity) as num_item_in_order, Menu_Items.name
FROM Customers
JOIN Orders
ON Customers.id=Orders.customer_id
JOIN Menu_Item_Orders
ON Menu_Item_Orders.order_id=Orders.id
JOIN Menu_Items
ON Menu_Item_Orders.menu_item_id=Menu_Items.id
GROUP BY full_name, Orders.order_date, Menu_Items.name
ORDER BY Orders.order_date;

--total amount of money on all orders
SELECT SUM(total_price) FROM Orders;

--Average amount spent on each order
SELECT AVG(total_price) FROM Orders;

--Average quantity of each item in each order
SELECT Orders.id, AVG(quantity) 
FROM Menu_Item_Orders
JOIN Orders
ON Menu_Item_Orders.order_id=Orders.id
GROUP BY Orders.id;

--Which Customer spent the most on a single order? 
SELECT CONCAT(Customers.first_name, ' ', Customers.last_name) as full_name, Orders.total_price, Orders.order_date
FROM Customers
JOIN Orders
ON Customers.id=Orders.customer_id
GROUP BY full_name, Orders.order_date, Orders.total_price
ORDER BY Orders.total_price desc
LIMIT 1;

--OR

SELECT MAX(total_price), Customers.first_name
FROM Orders
JOIN Customers
ON Customers.id=Orders.customer_id
GROUP BY Customers.first_name
LIMIT 1;

--How much did each customer spend all together?
SELECT Customers.first_name, SUM(Orders.total_price) as total_spent 
FROM Customers 
JOIN Orders 
ON Customers.id=Orders.customer_id 
GROUP BY Customers.first_name 
ORDER BY total_spent desc;

--Number of each item in each order
SELECT Orders.id, menu_items.name as menu_item,
menu_item_orders.quantity 
from orders 
join menu_item_orders 
on orders.id=menu_item_orders.order_id 
join menu_items 
on menu_items.id=menu_item_orders.menu_item_id;

--total made by a restaurant
SELECT Restaurants.name, SUM(Orders.total_price) AS total_sales
FROM Restaurants
JOIN Orders
ON Restaurants.id=Orders.restaurant_id
GROUP BY Restaurants.name
ORDER BY total_sales desc;

--Get a list of customers who have ordered Italian food
SELECT DISTINCT Customers.first_name FROM Customers 
JOIN Orders ON Customers.id=Orders.customer_id
JOIN Restaurants
ON Restaurants.id=Orders.restaurant_id
WHERE Restaurants.cuisine_type='Italian';

--Most Ordered Menu Item
SELECT Menu_Items.name AS menu_item, SUM(Menu_Item_Orders.quantity) AS number_ordered
FROM Menu_Items
JOIN Menu_Item_Orders
ON Menu_Items.id=Menu_Item_Orders.menu_item_id
GROUP BY menu_item
ORDER BY number_ordered desc
LIMIT 1;

--All orders from a specific customer
SELECT O.*
FROM Orders O
WHERE O.customer_id=3;

--Total revenue generated by restaurant with the most sales
SELECT Restaurants.name, SUM(Orders.total_price) AS total_sales
FROM Restaurants
JOIN Orders
ON Restaurants.id=Orders.restaurant_id
GROUP BY Restaurants.name
ORDER BY total_sales desc
LIMIT 1;

-- List all orders with customer information and the restaurant name
SELECT Orders.total_price, Orders.order_date, CONCAT(Customers.first_name, ' ', Customers.last_name) AS full_name,
Restaurants.name
FROM Orders
JOIN Restaurants
ON Orders.restaurant_id=Restaurants.id
JOIN Customers
ON Customers.id=Orders.customer_id
GROUP BY Orders.total_price, Orders.order_date, Restaurants.name, full_name
ORDER BY Orders.order_date;

-- Find the total number of orders placed by each customer:
SELECT COUNT(Orders.id) AS total_orders, Customers.id,
CONCAT(Customers.first_name, ' ', Customers.last_name) AS full_name
FROM Orders
JOIN Customers
ON Customers.id=Orders.customer_id
GROUP BY Customers.id
ORDER BY total_orders;

-- Calculate the average price of menu items for each restaurant
SELECT Restaurants.id, Restaurants.name, AVG(Menu_Items.price)::numeric(6,2) AS average_menuitem_price
FROM Restaurants
JOIN Menu_Items
ON Restaurants.id=Menu_Items.restaurant_id
GROUP BY Restaurants.id
ORDER BY average_menuitem_price;

-- List the menu items with their prices and the corresponding restaurant
SELECT Menu_Items.name, Menu_Items.price, Restaurants.name
FROM Menu_Items 
JOIN Restaurants
ON Menu_Items.restaurant_id=Restaurants.id
GROUP BY Menu_Items.name, Menu_Items.price, Restaurants.name;

--Identify Customers who have not placed any orders
SELECT Customers.first_name, Customers.last_name, Orders.total_price
FROM Customers
LEFT JOIN Orders
ON Customers.id=Orders.customer_id
WHERE Orders.id IS NULL;

--Menu Items in a specific order
SELECT Menu_Items.name, Menu_Items.price, Orders.order_date
FROM Menu_Items
JOIN Menu_Item_Orders
ON Menu_Items.id=Menu_Item_Orders.menu_item_id
JOIN Orders
ON Menu_Item_Orders.order_id=Orders.id
WHERE Orders.id=2;

--Restaurants that offer menu items with price above a certain threshold
SELECT Restaurants.name AS restaurant_name, Menu_Items.name AS item_name,
Menu_Items.price 
FROM Menu_Items
JOIN Restaurants
ON Restaurants.id=Menu_Items.restaurant_id
WHERE Menu_Items.price>10.00
GROUP BY restaurant_name, item_name, Menu_Items.price;